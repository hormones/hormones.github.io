{"pages":[],"posts":[{"title":"安装V2","text":"&nbsp; 准备工作 国外VPS一只 域名一只，已解析到国外VPS的IP上 安装此处安装V2指的是通过一键脚本安装，V2即v2ray，具体是什么不多说，懂的自然懂。 最好是纯净系统，先更新软件列表、安装BBRPlus版内核，然后安装fail2ban，最后安装V2 更新软件列表索引apt-get update 安装BBRPlus版内核 BBR加速是谷歌公司研发的TCP拥塞控制算法，可极大的提高网络传输速度，在BBR之后又出来了魔改BBR 和BBRplus 两者在速度上都有很大的提升。特别是国内外物理距离远，出口带宽拥堵，在网络极不稳定的情况下，可提升网络传输速度达20倍！ BBRPlus一键脚本地址: https://github.com/ylx2016/Linux-NetSpeed 123456789101112131415# 预先准备centos：yum install ca-certificates wget -y &amp;&amp; update-ca-trust force-enabledebian/ubuntu：apt-get install ca-certificates wget -y &amp;&amp; update-ca-certificates# 卸载内核并安装新内核，然后重启# 执行命令然后选择：安装 BBRplus版内核# ！！！注意！！!如果安装过程中有弹窗提示则选择 &lt;NO&gt;wget -O tcp.sh &quot;https://git.io/coolspeeda&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh# 查看内核版本与系统信息cat /proc/version# 启用BBRplus# 执行命令然后选择：使用BBRplus+FQ版加速wget -O tcp.sh &quot;https://git.io/coolspeeda&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh 安装fail2ban防止暴力破解Internet网络环境复杂，网上有大量的攻击机器在不断的对全网机器扫描常用端口(22、80、8080、443等)并进行暴力破解，轻则影响机器性能，重则服务被攻击、数据丢失，甚至机器被完全控制，危害极大！ 查看登录日志，可以看到有陌生大量的IP在不断的用各种用户(以root用户最多)和密码在不断的尝试登录，因此有必要对其登录进行限制，尽量避免密码被破解的风险！ 具体的防御措施在此不一一列出，仅针对安装V2的VPS提供一种极为简单的防御办法 — fail2ban一键脚本 SSH暴力破解是指攻击者通过密码字典或随机组合密码的方式尝试登陆服务器（针对的是全网机器），这种攻击行为一般不会有明确攻击目标，多数是通过扫描软件直接扫描整个广播域或网段。 fail2ban是一款实用软件，可以监视你的系统日志，然后匹配日志的错误信息（正则式匹配）执行相应的屏蔽动作。 fail2ban一键脚本地址: https://github.com/FunctionClub/Fail2ban 12345678910# 执行以下命令，然后按提示操作(询问是否修改ssh端口，最大尝试次数，禁用登录时间)，我一般选否，3次，禁用24小时wget https://raw.githubusercontent.com/FunctionClub/Fail2ban/master/fail2ban.sh &amp;&amp; bash fail2ban.sh 2&gt;&amp;1 | tee fail2ban.log# 查看状态fail2ban-client status ssh-iptables# 解禁IP# 被误伤无法ssh登录时，通过VNC后台或者换一个IP登录上去解禁被ban的IP# 例：fail2ban-client set ssh-iptables unbanip 1.2.3.4fail2ban-client set ssh-iptables unbanip xxx.xxx.xxx.xxx 安装V2注意，在依据此教程安装时，请勿选择有CDN标识的安装类型，该教程未给出CDN安装方式的前置教程 需要提前准备： 域名一只 –&gt; DNS解析到当前IP上 V2一键脚本地址: https://github.com/mack-a/v2ray-agent 123# 一键脚本执行安装# 选择项：任意组合安装 --&gt; Xray-core --&gt; 安装类型选 04（VLESS+TCP+xtls-rprx-direct和Trojan） --&gt; 输入域名 --&gt; 使用随机UUID --&gt; 结束wget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh","link":"/post/48b5183/"},{"title":"MariaDB-常用语法","text":"&nbsp; 1234567891011# 新建用户并赋权超级管理员权限GRANT ALL PRIVILEGES ON *.* TO 'ethan'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;# 新建数据库和用户并赋予数据库权限CREATE DATABASE nextcloud;GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextcloud'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;# 查看当前用户权限show grants;# 查看指定用户权限show grants for 'nextcloud'@'%';# 修改密码SET PASSWORD FOR 'nextcloud'@'%' = PASSWORD('123456');","link":"/post/54347/"},{"title":"安装PostgreSQL","text":"&nbsp; Debian安装PostgreSQL1312345678910111213141516171819202122232425262728293031323334353637383940414243444546# 更新系统及其软件包并重启apt updateapt -y upgradereboot# 添加PostgreSQL存储库apt updateapt -y install gnupg2wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -# 创建文件pgdg.list并新增内容vim /etc/apt/sources.list.d/pgdg.list# 新增内容deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main# 安装PostgreSQLapt updateapt -y install postgresql-13 postgresql-client-13# 修改监听端口(可选，要保证端口已放开)# 修改监听地址并设置可外网访问vim /etc/postgresql/13/main/postgresql.conf# 修改以下内容listen_addresses = '*'port = 端口号# 修改访问验证方式vim /etc/postgresql/13/main/pg_hba.conf# 新增内容host all all 0.0.0.0/0 md5# 启动数据库服务器pg_ctlcluster 13 main start# 查看服务状态pg_ctlcluster 13 main statussystemctl status postgresql@13-main.service# 切换到用户postgressu - postgres# 进入psql控制台psql ?database# 列出数据库psql -l# 退出psql控制台\\q","link":"/post/11529/"},{"title":"安装MariaDB","text":"&nbsp; Docker方式安装1234567891011121314151617181920212223242526272829303132# 搜索mariadb镜像docker search mariadb# 下载docker镜像docker pull mariadb# 查看本地已有的所有镜像docker images# 建一个目录作为和容器的映射目录mkdir -p /data/mariadb/data# 启动mariad镜像# PS: 删除容器后，重新创建容器前，需要先删除映射目录下的文件(网上有人说的，未验证)# PS: ！！！坑，环境变量中的密码如果包含#$等特殊字符可能会导致创建的用户初始密码有问题，无法登录！！！docker run --name mariadb -p 23306:3306 \\-e MARIADB_ROOT_PASSWORD=123456 \\-e MARIADB_USER=mock \\-e MARIADB_PASSWORD=123456 \\-e MARIADB_DATABASE=mock \\-v /data/mariadb/data:/var/lib/mysql \\--restart=always \\-d mariadb# 查看运行容器docker ps -a # 进入容器docker exec -it mariadb bash# 在容器内登录数据库mysql -uroot -p密码","link":"/post/13676/"},{"title":"PostgreSQL-常用语法","text":"&nbsp; 常用语法12# 新建用户CREATE USER xxx WITH PASSWORD '***'; 12# 新建数据库CREATE DATABASE yyy OWNER xxx; 12# 数据库赋权GRANT ALL PRIVILEGES ON DATABASE yyy TO xxx;","link":"/post/53944/"},{"title":"centos7安装Docker","text":"&nbsp; 安装前必读Linux 内核：官方建议 3.10 以上，3.8 以上貌似也可。 注意：本文的命令使用的是 root 用户登录执行，不是 root 的话所有命令前面要加 sudo 安装前准备 查看当前的内核版本 Docker 对Linux 内核版本的最低要求是3.10，如果内核版本低于3.10 会缺少一些运行Docker 容器的功能。 1uname -r 使用 root 权限更新 yum 包（生产环境中此步操作需慎重，看自己情况，学习的话随便搞） 这个命令不是必须执行的，看个人情况，后面出现不兼容的情况的话就必须update了 123!!!注意!!!yum -y update：升级所有包同时也升级软件和系统内核yum -y upgrade：只升级所有包，不升级软件和系统内核 卸载旧版本（如果之前安装过的话） 1yum remove docker docker-common docker-selinux docker-engine 安装Docker 安装需要的软件包， yum-util 提供yum-config-manager功能，另两个是devicemapper驱动依赖 1yum install -y yum-utils device-mapper-persistent-data lvm2 设置 yum 源 设置一个yum源，下面两个都可用 1234（中央仓库）yum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo（阿里仓库）yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 选择docker版本并安装 查看可用版本有哪些 1yum list docker-ce --showduplicates | sort -r 选择一个版本并安装：yum install docker-ce-版本号 1yum -y install docker-ce-18.03.1.ce 选择一个版本并安装：yum install docker-ce-版本号 12systemctl start dockersystemctl enable docker","link":"/post/13288/"},{"title":"低版本AngularJs(1.2.12及以下)输入中文完成后不触发ng-model的问题","text":"&nbsp; 问题描述当使用的AngularJs版本低于1.2.13时，使用输入法输入中文无法触发ng-model的双向绑定，此时必须再键入其它任意字符或者使输入框失去焦点，才能正确获取到ng-model的绑定值。这会对某些使用场景造成一些困扰，如搜索关键字自动补全，列表即时过滤等。 环境说明 AngularJs版本：1.2.12及以下 chrome浏览器版本：65.0.3325.181（正式版本） （64 位） 解决方案1. 更换angualrJs版本到1.2.13或以上1.2.13及以上版本已修复该BUG。对一个庞大的项目或者老项目来说，贸然更换版本有一定的风险，可能会导致已完成开发功能点不可用，应确保有合格且全面的测试以发现问题并修复，保障线上运行时不会出错。注意：在更换AngularJs版本时，要考虑到AngularJs相关插件的版本同步更新。 2. 修改源码AngularJs会为添加了ng-model指令的输入框绑定一系列监听，当input输入框类型为text时，绑定监听的方法为textInputType在textInputType方法中，绑定了compositionstart、compositionend、input的事件监听，这就是对中文输入等非直接输入的监听事件(具体作用可自行搜索)，代码如下所示: 12345678910111213141516171819202122232425262728293031323334353637function textInputType(scope, element, attr, ctrl, $sniffer, $browser) { var composing = false; element.on('compositionstart', function() { composing = true; }); element.on('compositionend', function() { composing = false; }); var listener = function() { // composing为true时，直接return，不执行listener if (composing) return; var value = element.val(); if (toBoolean(attr.ngTrim || 'T')) { value = trim(value); } if (ctrl.$viewValue !== value) { scope.$apply(function() { ctrl.$setViewValue(value); }); } }; if ($sniffer.hasEvent('input')) { element.on('input', listener); } else { // 其它代码在此省略 ... } // 其它代码在此省略 ...} 按代码逻辑来看，预想的是：在键入中文时，触发compositionstart，将composing值修改为true，输入完成触发compositionend，将composing值修改为false，然后触发input，执行listener，完成双向绑定。理想触发顺序为 compositionstart --&gt; compositionend --&gt; input --&gt; 执行listener但是在chrome浏览器中，由于浏览器机制问题，实际触发顺序为： compositionstart --&gt; input --&gt; 执行listener(实际并未执行)--&gt; compositionend因此，针对chrome浏览器，我们需要在触发compositionend后，才执行listener，所以，我们可以直接在compositionend方法内部调用listener: 1234element.on('compositionend', function() { composing = false; listener();}); 实际上，1.2.13及以上版本就是这么做的。 3. 自定义指令在某些特殊情况下，如果更换版本、修改源码均不可行，可以考虑自定义指令实现ng-model相同的功能。 4. 更换浏览器。。。","link":"/post/11509/"},{"title":"nextcloud安装","text":"&nbsp; docker方式安装1234567891011121314151617181920212223242526272829// 安装Mysqldocker pull mysqldocker run --name=mysql -e MYSQL_ROOT_PASSWORD=123456 -d -p 3306:3306 --restart=always mysql//创建nextcloud数据库：docker exec -it mysql mysql -u root -pCREATE DATABASE nextcloud;GRANT ALL ON *.* TO 'root'@'%';flush privileges;exit;// 安装Nextclouddocker pull nextcloud// 简单解释// -v /D/nextcloud/data:/var/www/html/data 目录映射到宿主机，注意要先创建好本机的目录// --link mysql:db 关联Mysqldocker run -d -p 9999:80 --name=nextcloud --link mysql:db \\-v /D/nextcloud/data:/var/www/html/data \\-v /D/nextcloud/config:/var/www/html/config \\-v /D/nextcloud/custom_apps:/var/www/html/custom_apps \\-v /D/SData:/SData \\--restart=always nextcloud// 打开页面初始化nextcloud: localhost:9999// 额外：手动添加文件到用户目录下// 执行命令更新nextcloud数据库扫描新添加的文件docker exec --user www-data nextcloud php occ files:scan --all docker-compose方式安装docker-compose基础命令 12docker-compose up -ddocker-compose down docker-compose.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657version: '2'# 必看！！！ 宿主机必须先创建好映射目录services: mysql: container_name: mysql image: mysql restart: always ports: - 3306:3306 volumes: - /D/nextcloud/mysql:/var/lib/mysql environment: - TZ=Asia/Shanghai - MYSQL_ROOT_PASSWORD=123456 networks: - net188# mariadb: # 使用mariadb会报错，原因未知# container_name: mariadb# image: mariadb# restart: always# ports:# - 3306:3306# volumes:# - /D/nextcloud/mariadb:/var/lib/mysql# environment:# - TZ=Asia/Shanghai# - MYSQL_ROOT_PASSWORD=123456# command: 'mysqld --innodb-flush-method=fsync'# networks:# - net188 nextcloud: container_name: nextcloud image: nextcloud restart: always depends_on:# - mariadb - mysql volumes: - /D/nextcloud/data:/var/www/html/data - /D/nextcloud/config:/var/www/html/config - /D/nextcloud/custom_apps:/var/www/html/custom_apps - /D/SData:/SData ports: - 9999:80 networks: - net188networks: net188: driver: bridge ipam: driver: default config: - subnet: 192.188.1.0/24 gateway: 192.188.1.1","link":"/post/48206/"},{"title":"Win10专业版与企业版安装Docker","text":"&nbsp; 前言 WSL2版的docker资源占用高解决方案，在你的%USERPROFILE% 即C:\\Users\\用户名, 创建一个 .wslconfig 文件，注意前面有个点，添加内容如下: 12345678910111213[ws12]memory=4GBswap=0processors=2localhostForwarding=trueswapFile=%USERPROFILE%\\AppData\\Local\\Temp\\swap_ws12.vhdx[ws1]memory=1GBswap=512MBprocessors=2localhostForwarding=trueswapFile=%USERPROFILE%\\AppData\\Local\\Temp\\swap_ws1.vhdx 开启Hiper-V 控制面板 –&gt; 程序 –&gt; 启用或关闭Windows功能 –&gt; 开启Hiper-V –&gt; 重启 下载docker for windows并无脑安装 下载地址：https://hub.docker.com/editions/community/docker-ce-desktop-windows 安装完成后，Docker 会自动启动。通知栏上会出现个小鲸鱼的图标，这表示 Docker 正在运行。 如果启动中遇到因 WSL 2 导致地错误，请安装 WSL 2。 安装好后，打开DOS窗口检测是否安装成功 docekr --version","link":"/post/27068/"},{"title":"Win10开机自动登录的方法","text":"&nbsp; 可以通过设置注册表，让Win10开机自动输入用户名和密码登录。方法如下： 按WIN+R键，输入regedit打开注册表编辑窗口 依次点开：HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon 修改(没有则添加)4个字符串参数： AutoAdminLogon：是否自动登录，1：是；0：否（设置成1） DefaultUserName：登录用户名 DefaultPassword：登录密码 DefaultDomainName：登录域名（没有域可以不设置） 设置完成后，重启电脑可以看到会自动登录了","link":"/post/14802/"}],"tags":[{"name":"V2","slug":"V2","link":"/tags/V2/"},{"name":"SQL语法","slug":"SQL语法","link":"/tags/SQL%E8%AF%AD%E6%B3%95/"},{"name":"数据库安装","slug":"数据库安装","link":"/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85/"},{"name":"docker安装","slug":"docker安装","link":"/tags/docker%E5%AE%89%E8%A3%85/"},{"name":"BUG","slug":"BUG","link":"/tags/BUG/"},{"name":"nextcloud安装","slug":"nextcloud安装","link":"/tags/nextcloud%E5%AE%89%E8%A3%85/"},{"name":"windows使用技巧","slug":"windows使用技巧","link":"/tags/windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"categories":[{"name":"V2","slug":"V2","link":"/categories/V2/"},{"name":"Database","slug":"Database","link":"/categories/Database/"},{"name":"Docker","slug":"Docker","link":"/categories/Docker/"},{"name":"MariaDB","slug":"Database/MariaDB","link":"/categories/Database/MariaDB/"},{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"Nextcloud","slug":"Nextcloud","link":"/categories/Nextcloud/"},{"name":"PostgreSQL","slug":"Database/PostgreSQL","link":"/categories/Database/PostgreSQL/"},{"name":"Windows","slug":"Windows","link":"/categories/Windows/"},{"name":"AngularJs","slug":"前端/AngularJs","link":"/categories/%E5%89%8D%E7%AB%AF/AngularJs/"},{"name":"Docker","slug":"Windows/Docker","link":"/categories/Windows/Docker/"},{"name":"使用技巧","slug":"Windows/使用技巧","link":"/categories/Windows/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"}]}